#include <IRremote.h> // IR 리모컨 수신 센서 통신을 위해 IRremote.h 헤더파일 include

int RECV_PIN = 2; // IR 리모컨 수신센서
IRrecv irrecv(RECV_PIN); // Irrecv 객체 생성
decode_results results; // 데이터 저장 구조체 생성

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); // 시리얼 통신 보드레이트 9600bps
  irrecv.enableIRIn(); // 수신 센서 감지 시작

}

void loop() {
  // put your main code here, to run repeatedly:
 if (irrecv.decode(&results)) // 수신시
 {
  if (results.decode_type == NEC) // NEC 포맷 IR신호
  {
    switch (results.value) // 수신한 값 각 case와 비교
    {
      case 0x00FF6897 : //Key 0
      Serial.println("Press '0'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF30CF : // Key1
      Serial.println("Press '1'");
      break;
      case 0x00FF18E7 : //Key 2
      Serial.println("Press '2'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF7A85 : //Key 3
      Serial.println("Press '3'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF10EF : //Key 4
      Serial.println("Press '4'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF38C7 : //Key 5
      Serial.println("Press '5'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF5AA5 : //Key 6
      Serial.println("Press '6'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF42BD : //Key 7
      Serial.println("Press '7'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF4AB5 : //Key 8
      Serial.println("Press '8'"); // 시리얼 통신으로 데이터 출력 
      break;
      case 0x00FF52AD : //Key 9
      Serial.println("Press '9'"); // 시리얼 통신으로 데이터 출력 
      break;
      default:
      break;
      }
    }
    irrecv.resume(); // 다음 값 수신 대기
  }
}
